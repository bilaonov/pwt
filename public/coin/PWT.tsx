/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 PWT.gltf --t
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cylinder_1: THREE.Mesh
    Cylinder_2: THREE.Mesh
    Curve: THREE.Mesh
    Curve001: THREE.Mesh
  }
  materials: {
    ['Material.003']: THREE.MeshStandardMaterial
    ['Material.002']: THREE.MeshStandardMaterial
    ['Material.001']: THREE.MeshStandardMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/PWT.gltf') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group rotation={[0, 0, -Math.PI / 2]}>
        <mesh geometry={nodes.Cylinder_1.geometry} material={materials['Material.003']} />
        <mesh geometry={nodes.Cylinder_2.geometry} material={materials['Material.002']} />
      </group>
      <mesh geometry={nodes.Curve.geometry} material={materials['Material.001']} position={[0, 0, 0]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={2.33} />
      <mesh geometry={nodes.Curve001.geometry} material={materials['Material.001']} position={[-0.06, -0.01, 0.01]} rotation={[Math.PI / 2, 0, Math.PI / 2]} scale={2.33} />
    </group>
  )
}

useGLTF.preload('/PWT.gltf')
